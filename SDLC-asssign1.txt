SDLC Overview:

Software Development Life Cycle (SDLC) is a process used by the software industry to design, develop and test high quality softwares. 
The SDLC aims to produce a high-quality software that meets or exceeds customer expectations, reaches completion within times and cost
estimates.SDLC is a process followed for a software project, within a software organization. It consists of a detailed plan describing 
how to develop, maintain, replace and alter or enhance specific software. The life cycle defines a methodology for improving the quality
of software and the overall development process.The following figure is a graphical representation of the various stages of a typical SDLC.

1.Planning 
2.Defining 
3.Designing
4.Development
5.Testing
6.Deployment
7.Maintanance


Step-1 Planning:
Planning is a crucial step in everything, just as in software development. In this same stage, requirement analysis is also performed 
by the developers of the organization. This is attained from customer inputs, and sales department/market surveys. The information from 
this analysis forms the building blocks of a basic project.Planning for the quality assurance requirements and identification of the 
risks associated with the project is also done in the planning stage. The outcome of the technical feasibility study is to define the
various technical approaches that can be followed to implement the project successfully with minimum risks.


Step-2 Defining:
Once the requirement analysis is done the next step is to clearly define and document the product requirements and get them approved
from the customer or the market analysts. This is done through an SRS (Software Requirement Specification) document which consists of
all the product requirements to be designed and developed during the project life cycle.

Step-3 Designing:
The design phase is where you put pen to paper—so to speak. The original plan and vision are elaborated into a software design document
(SDD) that includes the system design, programming language, templates, platform to use, and application security measures. This is also
where you can flowchart how the software responds to user actions.In most cases, the design phase will include the development of a 
prototype model. Creating a pre-production version of the product can give the team the opportunity to visualize what the product will 
look like and make changes without having to go through the hassle of rewriting code.

Step-4 Development:
The actual development phase is where the development team members divide the project into software modules and turn the software
requirement into code that makes the product. This SDLC phase can take quite a lot of time and specialized development tools. 
It’s important to have a set timeline and milestones so the software developers understand the expectations and you can keep track 
of the progress in this stage. In some cases, the development stage can also merge with the testing stage where certain tests are run 
to ensure there are no critical bugs. Keep in mind, different types of product development software will have different specialties so 
you’ll want to pick the one that suits you best.

Step-5 Testing:

Before getting the software product out the door to the production environment, it’s important to have your quality assurance team 
perform validation testing to make sure it is functioning properly and does what it’s meant to do. The testing process can also help 
hash out any major user experience issues and security issues. 

In some cases, software testing can be done in a simulated environment. Other simpler tests can also be automated. 

The types of testing to do in this phase:

Performance testing: Assesses the software's speed and scalability under different conditions
Functional testing: Verifies that the software meets the requirements
Security testing: Identifies potential vulnerabilities and weaknesses
Unit-testing: Tests individual units or components of the software
Usability testing: Evaluates the software's user interface and overall user experience
Acceptance testing: Also termed end-user testing, beta testing, application testing, or field testing, this is the final testing stage to test if the software product delivers on what it promises

Step-6 Deployment:

During the deployment phase, your final product is delivered to your intended user. You can automate this process and schedule your 
deployment depending on the type. For example, if you are only deploying a feature update, you can do so with a small number of users 
(canary release). If you are creating brand-new software, you can learn more about the different stages of the software release life
-cycle (SRLC).  

Step-7 Maintanance:
The maintenance phase is the final stage of the SDLC if you’re following the waterfall structure of the software development process.
However, the industry is moving towards a more agile software development approach where maintenance is only a stage for further
improvement.In the maintenance stage, users may find bugs and errors that were missed in the earlier testing phase. These bugs need to 
be fixed for better user experience and retention. In some cases, these can lead to going back to the first step of the software
development life cycle. The SDLC phases can also restart for any new features you may want to add in your next release/update.